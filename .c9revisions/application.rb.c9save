{"ts":1374023354957,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1374023594711,"patch":[[{"diffs":[[1,"require 'mysql2'\nrequire 'yaml'\nrequire 'fileutils'\nrequire 'csv'\nload 'functions/functions.rb'\nconfig = YAML::load(open(\"#{File.expand_path(File.dirname(__FILE__))}/configs/configs.yml\"))[\"mysql\"]\nclient = Mysql2::Client.new(:host => config[\"host\"], :username => config[\"username\"], :database => config[\"database\"])\n\nfiles = \"*.csv\"\nfiles = Dir.glob files\np files\nclient.query(\"Truncate table Customers\")\nbegin\n  files.each { |file|\n  p file\n    CSV.foreach(file, :headers => :first_row) { |record|\n      p record\n      fname = record[0]\n      lname = record[1]\n      dob = FormatDate.new(record[2]).newMethod\n      #dob = Date.strptime(record[2], \"%m/%d/%Y\").strftime(\"%Y-%m-%d\")\n      age = record[3]\n      #p \"#{fname}, #{lname}, #{dob}, #{age}\"\n      client.query \"Insert into Customers Values('#{fname}', '#{lname}', '#{age}', '#{dob}', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\n    }\n    # File.readlines(\"customers.txt\").map { |records|\n    #   records = records.gsub(\"\\n\", \"\")\n    #   records = records.split(\",\")\n    #   fname = records[0]\n    #   lname = records[1]\n    #   dob = Date.strptime(records[2], \"%m/%d/%Y\").strftime(\"%Y-%m-%d\")\n    #   age = records[3]\n    #   client.query \"Insert into Customers Values('#{fname}', '#{lname}', '#{age}', '#{dob}', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\n    # }\n  }\nrescue Exception => e\n  $message = e.message\n  exit\nend\n\n# if $message == nil\n  files.each{|file| FileUtils.mv(file, \"backups/\")}\n# end\n# alert = []\n# alert << \"Hello\"\n\n# p alert"]],"start1":0,"start2":0,"length1":0,"length2":1510}]],"length":1510,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374118316391,"patch":[[{"diffs":[[0,"les\n"],[-1,"p files"],[1,""],[0,"\ncli"]],"start1":353,"start2":353,"length1":15,"length2":8},{"diffs":[[0,"s\")\n"],[-1,"begin"],[1,"$message = nil\nbegin \n  client.query \"BEGIN\""],[0,"\n  f"]],"start1":395,"start2":395,"length1":13,"length2":52},{"diffs":[[0,"le|\n"],[-1,"  p file\n"],[0,"    "]],"start1":462,"start2":462,"length1":17,"length2":8},{"diffs":[[0,"rd|\n"],[-1,"      p record\n"],[0,"    "]],"start1":519,"start2":519,"length1":23,"length2":8},{"diffs":[[0,"    "],[-1,"#dob = Date.strptime(record[2], \"%m/%d/%Y\").strftime(\"%Y-%m-%d\")\n      age = record[3]\n      #p \"#{fname}, #{lname}, #{dob}, #{age}\""],[1,"age = record[3]"],[0,"\n   "]],"start1":621,"start2":621,"length1":140,"length2":23},{"diffs":[[0,"}\n  "],[-1,"  # File.readlines(\"c"],[1,"}\n  client.query \"Insert into Logs values('C"],[0,"ustomers"],[-1,".txt\").map { |records|\n    #   records = records.gsub(\"\\n\", \"\")\n    #   records = records.split(\",\")\n    #   fname = records[0]\n    #   lname = records[1]\n    #   dob = Date"],[1," Load', '#{$message}', 'success', '#{Time.now"],[0,".str"],[-1,"p"],[1,"f"],[0,"time("],[-1,"records[2], \"%m/%d/%Y\").strftime(\"%Y-%m-%d\")\n    #   age = records[3]\n    # "],[1,"\"%Y-%m-%d %H:%M:%S\")}')\"\n  files.each{|file| FileUtils.mv(file, \"backups/\")}\nrescue Exception => e\n  $message = e.message\n  client.query \"ROLLBACK\"\n"],[0,"  cl"]],"start1":784,"start2":784,"length1":296,"length2":263},{"diffs":[[0,"nto "],[-1,"Customers V"],[1,"Logs v"],[0,"alues('"],[-1,"#{fname}', '#{lname}', '#{age}', '#{dob}', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\n    # }\n  }\nrescue Exception => e\n  $message = e.message\n  exit\nend\n\n# if $message == nil\n  files.each{|file| FileUtils.mv(file, \"backups/\")}\n# end\n# alert = []\n# alert << \"Hello\"\n\n# p alert"],[1,"Customers Load', '#{$message.gsub(\"'\",\"''\")}', 'failed', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\nensure\n  client.query \"COMMIT\"\nend"]],"start1":1067,"start2":1067,"length1":301,"length2":154}]],"length":1221,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375239893267,"patch":[[{"diffs":[[0,"MIT\"\nend"],[1,"\ncustomer = MyStore.addCustomer\np customer"]],"start1":1213,"start2":1213,"length1":8,"length2":50}]],"length":1263,"saved":false}
{"ts":1375239934971,"patch":[[{"diffs":[[0,"])\n\n"],[-1,"files = \"*.csv\"\nfiles = Dir.glob files\n\nclient.query(\"Truncate table Customers\")\n$message = nil\nbegin \n  client.query \"BEGIN\"\n  files.each { |file|\n    CSV.foreach(file, :headers => :first_row) { |record|\n      fname = record[0]\n      lname = record[1]\n      dob = FormatDate.new(record[2]).newMethod\n      age = record[3]\n      client.query \"Insert into Customers Values('#{fname}', '#{lname}', '#{age}', '#{dob}', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\n    }\n  }\n  client.query \"Insert into Logs values('Customers Load', '#{$message}', 'success', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\n  files.each{|file| FileUtils.mv(file, \"backups/\")}\nrescue Exception => e\n  $message = e.message\n  client.query \"ROLLBACK\"\n  client.query \"Insert into Logs values('Customers Load', '#{$message.gsub(\"'\",\"''\")}', 'failed', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\nensure\n  client.query \"COMMIT\"\nend"],[1,"# Heroine"],[0,"\ncus"]],"start1":314,"start2":314,"length1":911,"length2":17}]],"length":369,"saved":false}
{"ts":1375239942857,"patch":[[{"diffs":[[0,"\n\n# "],[-1,"Heroine"],[1,"files = \"*.csv\"\n# files = Dir.glob files\n\n# client.query(\"Truncate table Customers\")\n# $message = nil\n# begin \n#   client.query \"BEGIN\"\n#   files.each { |file|\n#     CSV.foreach(file, :headers => :first_row) { |record|\n#       fname = record[0]\n#       lname = record[1]\n#       dob = FormatDate.new(record[2]).newMethod\n#       age = record[3]\n#       client.query \"Insert into Customers Values('#{fname}', '#{lname}', '#{age}', '#{dob}', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\n#     }\n#   }\n#   client.query \"Insert into Logs values('Customers Load', '#{$message}', 'success', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\n#   files.each{|file| FileUtils.mv(file, \"backups/\")}\n# rescue Exception => e\n#   $message = e.message\n#   client.query \"ROLLBACK\"\n#   client.query \"Insert into Logs values('Customers Load', '#{$message.gsub(\"'\",\"''\")}', 'failed', '#{Time.now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\"\n# ensure\n#   client.query \"COMMIT\"\n# end"],[0,"\ncus"]],"start1":316,"start2":316,"length1":15,"length2":957}]],"length":1311,"saved":false}
